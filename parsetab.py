
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABS AND AND_BIT ARRAY CADENA CARACTER CHAR COMENTARIO COR_DER COR_IZQ DECIMAL DEVUELTO DIV DOS_PUNTOS ENTERO ES_IGUAL EXIT FLOAT GOTO IF IGUAL INT LABEL MAIN MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MOD MULT NOT NOT_BIT NO_IGUAL OR OR_BIT PARAMETRO PAR_DER PAR_IZQ PILA PRINT PUNTERO PUNTO_COMA READ RESTA RETORNO SHIFT_DER SHIFT_IZQ SUMA TEMPORAL UNSET XOR XOR_BITinit           : programinit           : program        : mainprogram        : main labelsmain           : MAIN DOS_PUNTOS instructionsmain           : error instructionslabels         : labels labellabels         : labellabel         : LABEL DOS_PUNTOS instructionslabel           : error instructionsinstructions   : instructions instructioninstructions   : instructioninstruction    : exit PUNTO_COMAinstruction    : unset PUNTO_COMAinstruction    : print PUNTO_COMAinstruction    : if PUNTO_COMAinstruction    : set PUNTO_COMAinstruction    : goto PUNTO_COMAinstruction    : error PUNTO_COMAexit           : EXITgoto           : GOTO LABELunset          : UNSET PAR_IZQ var PAR_DERprint          : PRINT PAR_IZQ var PAR_DERif             : IF PAR_IZQ condition PAR_DER gotocondition      : expressioncondition      : varset            : var IGUAL assignationvar            : registervar            : register positionsregister       : TEMPORALregister       : PARAMETROregister       : DEVUELTOregister       : RETORNOregister       : PILAregister       : PUNTEROpositions      : positions positionpositions      : positionposition       : COR_IZQ cont COR_DERprimary        : ENTEROprimary        : CADENAprimary        : CARACTERprimary        : DECIMALassignation    : dataassignation    : arrayassignation    : readassignation    : castassignation    : expressionassignation    : pointerdata           : primarydata           : varcont           : primarycont           : registerarray          : ARRAY PAR_IZQ PAR_DERread           : READ PAR_IZQ PAR_DERcast           : PAR_IZQ type PAR_DER vartype         : FLOAT\n                    | INT\n                    | CHARexpression     : aritmeticexpression     : logicalexpression     : bitxbitexpression     : ralationalaritmetic    : data SUMA data\n                    | data RESTA data\n                    | data MULT data\n                    | data DIV data\n                    | data MOD data\n                    | RESTA data\n                    | ABS PAR_IZQ data PAR_DERlogical      : data AND data\n                    | data OR data\n                    | data XOR data\n                    | NOT databitxbit      : data AND_BIT data\n                    | data OR_BIT data\n                    | data XOR_BIT data\n                    | data SHIFT_DER data\n                    | data SHIFT_IZQ data\n                    | NOT_BIT dataralational   : data ES_IGUAL data\n                    | data NO_IGUAL data\n                    | data MAYOR data\n                    | data MENOR data\n                    | data MAYOR_IGUAL data\n                    | data MENOR_IGUAL datapointer        : AND_BIT var'
    
_lr_action_items = {'$end':([0,1,2,3,6,7,12,13,33,35,36,37,38,39,40,41,42,43,44,53,],[-2,0,-1,-3,-4,-8,-6,-12,-7,-10,-5,-19,-11,-13,-14,-15,-16,-17,-18,-9,]),'MAIN':([0,],[4,]),'error':([0,3,5,6,7,9,10,12,13,33,34,35,36,37,38,39,40,41,42,43,44,53,],[5,9,11,9,-8,11,11,11,-12,-7,11,11,11,-19,-11,-13,-14,-15,-16,-17,-18,11,]),'LABEL':([3,6,7,12,13,25,33,35,36,37,38,39,40,41,42,43,44,53,],[8,8,-8,-6,-12,49,-7,-10,-5,-19,-11,-13,-14,-15,-16,-17,-18,-9,]),'DOS_PUNTOS':([4,8,],[10,34,]),'EXIT':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,53,],[20,20,20,20,-12,20,20,20,-19,-11,-13,-14,-15,-16,-17,-18,20,]),'UNSET':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,53,],[21,21,21,21,-12,21,21,21,-19,-11,-13,-14,-15,-16,-17,-18,21,]),'PRINT':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,53,],[23,23,23,23,-12,23,23,23,-19,-11,-13,-14,-15,-16,-17,-18,23,]),'IF':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,53,],[24,24,24,24,-12,24,24,24,-19,-11,-13,-14,-15,-16,-17,-18,24,]),'GOTO':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,53,121,],[25,25,25,25,-12,25,25,25,-19,-11,-13,-14,-15,-16,-17,-18,25,25,]),'TEMPORAL':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,71,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,143,],[27,27,27,27,-12,27,27,27,-19,-11,-13,-14,-15,-16,-17,-18,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'PARAMETRO':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,71,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,143,],[28,28,28,28,-12,28,28,28,-19,-11,-13,-14,-15,-16,-17,-18,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'DEVUELTO':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,71,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,143,],[29,29,29,29,-12,29,29,29,-19,-11,-13,-14,-15,-16,-17,-18,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'RETORNO':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,71,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,143,],[30,30,30,30,-12,30,30,30,-19,-11,-13,-14,-15,-16,-17,-18,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'PILA':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,71,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,143,],[31,31,31,31,-12,31,31,31,-19,-11,-13,-14,-15,-16,-17,-18,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PUNTERO':([5,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,52,53,71,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,143,],[32,32,32,32,-12,32,32,32,-19,-11,-13,-14,-15,-16,-17,-18,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'PUNTO_COMA':([11,14,15,16,17,18,19,20,26,27,28,29,30,31,32,49,50,51,55,56,57,58,59,60,61,62,63,67,68,69,70,72,73,74,75,85,89,115,116,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,146,147,148,],[37,39,40,41,42,43,44,-20,-28,-30,-31,-32,-33,-34,-35,-21,-29,-37,-50,-27,-43,-44,-45,-46,-47,-48,-49,-59,-60,-61,-62,-39,-40,-41,-42,-36,-22,-86,-68,-73,-79,-23,-38,-63,-64,-65,-66,-67,-70,-71,-72,-74,-75,-76,-77,-78,-80,-81,-82,-83,-84,-85,-53,-54,-24,-55,-69,]),'PAR_IZQ':([21,23,24,46,64,66,77,],[45,47,48,65,109,114,117,]),'IGUAL':([22,26,27,28,29,30,31,32,50,51,85,122,],[46,-28,-30,-31,-32,-33,-34,-35,-29,-37,-36,-38,]),'PAR_DER':([26,27,28,29,30,31,32,50,51,54,55,63,67,68,69,70,72,73,74,75,80,81,82,83,85,109,110,111,112,113,114,116,118,119,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,148,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,89,-50,-49,-59,-60,-61,-62,-39,-40,-41,-42,120,121,-25,-26,-36,142,143,-56,-57,-58,144,-68,-73,-79,-38,-63,-64,-65,-66,-67,-70,-71,-72,-74,-75,-76,-77,-78,-80,-81,-82,-83,-84,-85,148,-69,]),'SUMA':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,90,-49,-39,-40,-41,-42,-50,90,-36,-38,]),'RESTA':([26,27,28,29,30,31,32,46,48,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,76,76,-29,-37,-50,91,-49,-39,-40,-41,-42,-50,91,-36,-38,]),'MULT':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,92,-49,-39,-40,-41,-42,-50,92,-36,-38,]),'DIV':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,93,-49,-39,-40,-41,-42,-50,93,-36,-38,]),'MOD':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,94,-49,-39,-40,-41,-42,-50,94,-36,-38,]),'AND':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,95,-49,-39,-40,-41,-42,-50,95,-36,-38,]),'OR':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,96,-49,-39,-40,-41,-42,-50,96,-36,-38,]),'XOR':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,97,-49,-39,-40,-41,-42,-50,97,-36,-38,]),'AND_BIT':([26,27,28,29,30,31,32,46,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,71,-29,-37,-50,98,-49,-39,-40,-41,-42,-50,98,-36,-38,]),'OR_BIT':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,99,-49,-39,-40,-41,-42,-50,99,-36,-38,]),'XOR_BIT':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,100,-49,-39,-40,-41,-42,-50,100,-36,-38,]),'SHIFT_DER':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,101,-49,-39,-40,-41,-42,-50,101,-36,-38,]),'SHIFT_IZQ':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,102,-49,-39,-40,-41,-42,-50,102,-36,-38,]),'ES_IGUAL':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,103,-49,-39,-40,-41,-42,-50,103,-36,-38,]),'NO_IGUAL':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,104,-49,-39,-40,-41,-42,-50,104,-36,-38,]),'MAYOR':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,105,-49,-39,-40,-41,-42,-50,105,-36,-38,]),'MENOR':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,106,-49,-39,-40,-41,-42,-50,106,-36,-38,]),'MAYOR_IGUAL':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,107,-49,-39,-40,-41,-42,-50,107,-36,-38,]),'MENOR_IGUAL':([26,27,28,29,30,31,32,50,51,55,57,63,72,73,74,75,83,84,85,122,],[-28,-30,-31,-32,-33,-34,-35,-29,-37,-50,108,-49,-39,-40,-41,-42,-50,108,-36,-38,]),'COR_IZQ':([26,27,28,29,30,31,32,50,51,85,122,],[52,-30,-31,-32,-33,-34,-35,52,-37,-36,-38,]),'COR_DER':([27,28,29,30,31,32,72,73,74,75,86,87,88,],[-30,-31,-32,-33,-34,-35,-39,-40,-41,-42,122,-51,-52,]),'ARRAY':([46,],[64,]),'READ':([46,],[66,]),'ENTERO':([46,48,52,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'CADENA':([46,48,52,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'CARACTER':([46,48,52,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'DECIMAL':([46,48,52,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'ABS':([46,48,],[77,77,]),'NOT':([46,48,],[78,78,]),'NOT_BIT':([46,48,],[79,79,]),'FLOAT':([65,],[111,]),'INT':([65,],[112,]),'CHAR':([65,],[113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'program':([0,],[2,]),'main':([0,],[3,]),'labels':([3,],[6,]),'label':([3,6,],[7,33,]),'instructions':([5,9,10,34,],[12,35,36,53,]),'instruction':([5,9,10,12,34,35,36,53,],[13,13,13,38,13,38,38,38,]),'exit':([5,9,10,12,34,35,36,53,],[14,14,14,14,14,14,14,14,]),'unset':([5,9,10,12,34,35,36,53,],[15,15,15,15,15,15,15,15,]),'print':([5,9,10,12,34,35,36,53,],[16,16,16,16,16,16,16,16,]),'if':([5,9,10,12,34,35,36,53,],[17,17,17,17,17,17,17,17,]),'set':([5,9,10,12,34,35,36,53,],[18,18,18,18,18,18,18,18,]),'goto':([5,9,10,12,34,35,36,53,121,],[19,19,19,19,19,19,19,19,146,]),'var':([5,9,10,12,34,35,36,45,46,47,48,53,71,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,143,],[22,22,22,22,22,22,22,54,55,80,83,22,115,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,147,]),'register':([5,9,10,12,34,35,36,45,46,47,48,52,53,71,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,143,],[26,26,26,26,26,26,26,26,26,26,26,88,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'positions':([26,],[50,]),'position':([26,50,],[51,85,]),'assignation':([46,],[56,]),'data':([46,48,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,],[57,84,116,118,119,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,145,]),'array':([46,],[58,]),'read':([46,],[59,]),'cast':([46,],[60,]),'expression':([46,48,],[61,82,]),'pointer':([46,],[62,]),'primary':([46,48,52,76,78,79,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,117,],[63,63,87,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'aritmetic':([46,48,],[67,67,]),'logical':([46,48,],[68,68,]),'bitxbit':([46,48,],[69,69,]),'ralational':([46,48,],[70,70,]),'condition':([48,],[81,]),'cont':([52,],[86,]),'type':([65,],[110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> program','init',1,'p_init','ascendente.py',200),
  ('init -> <empty>','init',0,'p_init_vacio','ascendente.py',205),
  ('program -> main','program',1,'p_program_main','ascendente.py',208),
  ('program -> main labels','program',2,'p_program_labels','ascendente.py',214),
  ('main -> MAIN DOS_PUNTOS instructions','main',3,'p_main','ascendente.py',221),
  ('main -> error instructions','main',2,'p_main_error','ascendente.py',227),
  ('labels -> labels label','labels',2,'p_labels','ascendente.py',231),
  ('labels -> label','labels',1,'p_labels_simple','ascendente.py',238),
  ('label -> LABEL DOS_PUNTOS instructions','label',3,'p_label','ascendente.py',244),
  ('label -> error instructions','label',2,'p_label_error','ascendente.py',249),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','ascendente.py',253),
  ('instructions -> instruction','instructions',1,'p_instructions_simple','ascendente.py',260),
  ('instruction -> exit PUNTO_COMA','instruction',2,'p_instruction_exit','ascendente.py',266),
  ('instruction -> unset PUNTO_COMA','instruction',2,'p_instruction_unset','ascendente.py',271),
  ('instruction -> print PUNTO_COMA','instruction',2,'p_instruction_print','ascendente.py',277),
  ('instruction -> if PUNTO_COMA','instruction',2,'p_instruction_if','ascendente.py',283),
  ('instruction -> set PUNTO_COMA','instruction',2,'p_instruction_set','ascendente.py',289),
  ('instruction -> goto PUNTO_COMA','instruction',2,'p_instruction_goto','ascendente.py',295),
  ('instruction -> error PUNTO_COMA','instruction',2,'p_instruction_error','ascendente.py',301),
  ('exit -> EXIT','exit',1,'p_exit','ascendente.py',305),
  ('goto -> GOTO LABEL','goto',2,'p_goto','ascendente.py',311),
  ('unset -> UNSET PAR_IZQ var PAR_DER','unset',4,'p_unset','ascendente.py',317),
  ('print -> PRINT PAR_IZQ var PAR_DER','print',4,'p_print','ascendente.py',323),
  ('if -> IF PAR_IZQ condition PAR_DER goto','if',5,'p_if','ascendente.py',329),
  ('condition -> expression','condition',1,'p_condition_expression','ascendente.py',335),
  ('condition -> var','condition',1,'p_condition_var','ascendente.py',341),
  ('set -> var IGUAL assignation','set',3,'p_set','ascendente.py',347),
  ('var -> register','var',1,'p_var','ascendente.py',353),
  ('var -> register positions','var',2,'p_var_array','ascendente.py',359),
  ('register -> TEMPORAL','register',1,'p_register_temporal','ascendente.py',365),
  ('register -> PARAMETRO','register',1,'p_register_parametro','ascendente.py',371),
  ('register -> DEVUELTO','register',1,'p_register_devuelto','ascendente.py',377),
  ('register -> RETORNO','register',1,'p_register_retorno','ascendente.py',383),
  ('register -> PILA','register',1,'p_register_pila','ascendente.py',389),
  ('register -> PUNTERO','register',1,'p_register_puntero','ascendente.py',395),
  ('positions -> positions position','positions',2,'p_positions','ascendente.py',401),
  ('positions -> position','positions',1,'p_positions_simple','ascendente.py',408),
  ('position -> COR_IZQ cont COR_DER','position',3,'p_position','ascendente.py',414),
  ('primary -> ENTERO','primary',1,'p_primary_entero','ascendente.py',420),
  ('primary -> CADENA','primary',1,'p_primary_cadena','ascendente.py',426),
  ('primary -> CARACTER','primary',1,'p_primary_caracter','ascendente.py',432),
  ('primary -> DECIMAL','primary',1,'p_primary_decimal','ascendente.py',438),
  ('assignation -> data','assignation',1,'p_assignation_data','ascendente.py',444),
  ('assignation -> array','assignation',1,'p_assignation_array','ascendente.py',450),
  ('assignation -> read','assignation',1,'p_assignation_read','ascendente.py',456),
  ('assignation -> cast','assignation',1,'p_assignation_cast','ascendente.py',462),
  ('assignation -> expression','assignation',1,'p_assignation_expression','ascendente.py',468),
  ('assignation -> pointer','assignation',1,'p_assignation_pointer','ascendente.py',474),
  ('data -> primary','data',1,'p_data_primary','ascendente.py',480),
  ('data -> var','data',1,'p_data_var','ascendente.py',486),
  ('cont -> primary','cont',1,'p_cont_primary','ascendente.py',492),
  ('cont -> register','cont',1,'p_cont_register','ascendente.py',498),
  ('array -> ARRAY PAR_IZQ PAR_DER','array',3,'p_array','ascendente.py',504),
  ('read -> READ PAR_IZQ PAR_DER','read',3,'p_read','ascendente.py',510),
  ('cast -> PAR_IZQ type PAR_DER var','cast',4,'p_cast','ascendente.py',516),
  ('type -> FLOAT','type',1,'p_type','ascendente.py',522),
  ('type -> INT','type',1,'p_type','ascendente.py',523),
  ('type -> CHAR','type',1,'p_type','ascendente.py',524),
  ('expression -> aritmetic','expression',1,'p_expression_aritmetic','ascendente.py',537),
  ('expression -> logical','expression',1,'p_expression_logical','ascendente.py',543),
  ('expression -> bitxbit','expression',1,'p_expression_bitxbit','ascendente.py',549),
  ('expression -> ralational','expression',1,'p_expression_ralational','ascendente.py',555),
  ('aritmetic -> data SUMA data','aritmetic',3,'p_aritmetic','ascendente.py',561),
  ('aritmetic -> data RESTA data','aritmetic',3,'p_aritmetic','ascendente.py',562),
  ('aritmetic -> data MULT data','aritmetic',3,'p_aritmetic','ascendente.py',563),
  ('aritmetic -> data DIV data','aritmetic',3,'p_aritmetic','ascendente.py',564),
  ('aritmetic -> data MOD data','aritmetic',3,'p_aritmetic','ascendente.py',565),
  ('aritmetic -> RESTA data','aritmetic',2,'p_aritmetic','ascendente.py',566),
  ('aritmetic -> ABS PAR_IZQ data PAR_DER','aritmetic',4,'p_aritmetic','ascendente.py',567),
  ('logical -> data AND data','logical',3,'p_logical','ascendente.py',592),
  ('logical -> data OR data','logical',3,'p_logical','ascendente.py',593),
  ('logical -> data XOR data','logical',3,'p_logical','ascendente.py',594),
  ('logical -> NOT data','logical',2,'p_logical','ascendente.py',595),
  ('bitxbit -> data AND_BIT data','bitxbit',3,'p_bitxbit','ascendente.py',612),
  ('bitxbit -> data OR_BIT data','bitxbit',3,'p_bitxbit','ascendente.py',613),
  ('bitxbit -> data XOR_BIT data','bitxbit',3,'p_bitxbit','ascendente.py',614),
  ('bitxbit -> data SHIFT_DER data','bitxbit',3,'p_bitxbit','ascendente.py',615),
  ('bitxbit -> data SHIFT_IZQ data','bitxbit',3,'p_bitxbit','ascendente.py',616),
  ('bitxbit -> NOT_BIT data','bitxbit',2,'p_bitxbit','ascendente.py',617),
  ('ralational -> data ES_IGUAL data','ralational',3,'p_relational','ascendente.py',640),
  ('ralational -> data NO_IGUAL data','ralational',3,'p_relational','ascendente.py',641),
  ('ralational -> data MAYOR data','ralational',3,'p_relational','ascendente.py',642),
  ('ralational -> data MENOR data','ralational',3,'p_relational','ascendente.py',643),
  ('ralational -> data MAYOR_IGUAL data','ralational',3,'p_relational','ascendente.py',644),
  ('ralational -> data MENOR_IGUAL data','ralational',3,'p_relational','ascendente.py',645),
  ('pointer -> AND_BIT var','pointer',2,'p_pointer','ascendente.py',667),
]
