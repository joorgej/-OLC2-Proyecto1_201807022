
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABS AND AND_BIT ARRAY CADENA CARACTER CHAR COMENTARIO COR_DER COR_IZQ DECIMAL DEVUELTO DIV DOS_PUNTOS ENTERO ES_IGUAL EXIT FLOAT GOTO IF IGUAL INT LABEL MAIN MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MOD MULT NOT NOT_BIT NO_IGUAL OR OR_BIT PARAMETRO PAR_DER PAR_IZQ PILA PRINT PUNTERO PUNTO_COMA READ RESTA RETORNO SHIFT_DER SHIFT_IZQ SUMA TEMPORAL UNSET XOR XOR_BITinit           : programinit           : program        : main labelsmain           : MAIN DOS_PUNTOS instructionsmain           : error instructionslabels         : label labelslabels         : label          : LABEL DOS_PUNTOS instructionslabel          : error instructionsinstructions   : instruction instructionsprimainstructionsprima   : instruction instructionsprimainstructionsprima   : instruction    : exit PUNTO_COMAinstruction    : unset PUNTO_COMAinstruction    : print PUNTO_COMAinstruction    : if PUNTO_COMAinstruction    : set PUNTO_COMAinstruction    : goto PUNTO_COMAinstruction    : error PUNTO_COMAexit           : EXITgoto           : GOTO LABELunset          : UNSET PAR_IZQ var PAR_DERprint          : PRINT PAR_IZQ var PAR_DERif             : IF PAR_IZQ condition PAR_DER gotocondition      : expressioncondition      : varset            : var IGUAL assignationvar            : registervar            : register positionsregister       : TEMPORALregister       : PARAMETROregister       : DEVUELTOregister       : RETORNOregister       : PILAregister       : PUNTEROpositions      : position positionsprimapositionsprima : position positionsprimapositionsprima : position       : COR_IZQ cont COR_DERprimary        : ENTEROprimary        : CADENAprimary        : CARACTERprimary        : DECIMALassignation    : dataassignation    : arrayassignation    : readassignation    : castassignation    : expressionassignation    : pointerdata           : primarydata           : varcont           : primarycont           : registerarray          : ARRAY PAR_IZQ PAR_DERread           : READ PAR_IZQ PAR_DERcast           : PAR_IZQ type PAR_DER vartype         : FLOAT\n                    | INT\n                    | CHARexpression     : aritmeticexpression     : logicalexpression     : bitxbitexpression     : ralationalaritmetic    : data SUMA data\n                    | data RESTA data\n                    | data MULT data\n                    | data DIV data\n                    | data MOD data\n                    | RESTA data\n                    | ABS PAR_IZQ data PAR_DERlogical      : data AND data\n                    | data OR data\n                    | data XOR data\n                    | NOT databitxbit      : data AND_BIT data\n                    | data OR_BIT data\n                    | data XOR_BIT data\n                    | data SHIFT_DER data\n                    | data SHIFT_IZQ data\n                    | NOT_BIT dataralational   : data ES_IGUAL data\n                    | data NO_IGUAL data\n                    | data MAYOR data\n                    | data MENOR data\n                    | data MAYOR_IGUAL data\n                    | data MENOR_IGUAL datapointer        : AND_BIT var'
    
_lr_action_items = {'$end':([0,1,2,3,6,7,12,13,33,35,36,37,38,39,40,41,42,43,44,45,54,55,],[-2,0,-1,-7,-3,-7,-5,-12,-6,-9,-4,-19,-12,-10,-13,-14,-15,-16,-17,-18,-8,-11,]),'MAIN':([0,],[4,]),'error':([0,3,5,7,9,10,12,13,34,35,36,37,38,39,40,41,42,43,44,45,54,55,],[5,9,11,9,11,11,-5,11,11,-9,-4,-19,11,-10,-13,-14,-15,-16,-17,-18,-8,-11,]),'LABEL':([3,7,12,13,25,35,36,37,38,39,40,41,42,43,44,45,54,55,],[8,8,-5,-12,50,-9,-4,-19,-12,-10,-13,-14,-15,-16,-17,-18,-8,-11,]),'DOS_PUNTOS':([4,8,],[10,34,]),'EXIT':([5,9,10,13,34,37,38,40,41,42,43,44,45,],[20,20,20,20,20,-19,20,-13,-14,-15,-16,-17,-18,]),'UNSET':([5,9,10,13,34,37,38,40,41,42,43,44,45,],[21,21,21,21,21,-19,21,-13,-14,-15,-16,-17,-18,]),'PRINT':([5,9,10,13,34,37,38,40,41,42,43,44,45,],[23,23,23,23,23,-19,23,-13,-14,-15,-16,-17,-18,]),'IF':([5,9,10,13,34,37,38,40,41,42,43,44,45,],[24,24,24,24,24,-19,24,-13,-14,-15,-16,-17,-18,]),'GOTO':([5,9,10,13,34,37,38,40,41,42,43,44,45,124,],[25,25,25,25,25,-19,25,-13,-14,-15,-16,-17,-18,25,]),'TEMPORAL':([5,9,10,13,34,37,38,40,41,42,43,44,45,46,47,48,49,53,73,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,147,],[27,27,27,27,27,-19,27,-13,-14,-15,-16,-17,-18,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'PARAMETRO':([5,9,10,13,34,37,38,40,41,42,43,44,45,46,47,48,49,53,73,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,147,],[28,28,28,28,28,-19,28,-13,-14,-15,-16,-17,-18,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'DEVUELTO':([5,9,10,13,34,37,38,40,41,42,43,44,45,46,47,48,49,53,73,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,147,],[29,29,29,29,29,-19,29,-13,-14,-15,-16,-17,-18,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'RETORNO':([5,9,10,13,34,37,38,40,41,42,43,44,45,46,47,48,49,53,73,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,147,],[30,30,30,30,30,-19,30,-13,-14,-15,-16,-17,-18,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'PILA':([5,9,10,13,34,37,38,40,41,42,43,44,45,46,47,48,49,53,73,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,147,],[31,31,31,31,31,-19,31,-13,-14,-15,-16,-17,-18,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PUNTERO':([5,9,10,13,34,37,38,40,41,42,43,44,45,46,47,48,49,53,73,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,147,],[32,32,32,32,32,-19,32,-13,-14,-15,-16,-17,-18,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'PUNTO_COMA':([11,14,15,16,17,18,19,20,26,27,28,29,30,31,32,50,51,52,57,58,59,60,61,62,63,64,65,69,70,71,72,74,75,76,77,87,88,92,118,119,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,150,151,152,],[37,40,41,42,43,44,45,-20,-28,-30,-31,-32,-33,-34,-35,-21,-29,-38,-51,-27,-44,-45,-46,-47,-48,-49,-50,-60,-61,-62,-63,-40,-41,-42,-43,-38,-36,-22,-87,-69,-74,-80,-23,-37,-39,-64,-65,-66,-67,-68,-71,-72,-73,-75,-76,-77,-78,-79,-81,-82,-83,-84,-85,-86,-54,-55,-24,-56,-70,]),'PAR_IZQ':([21,23,24,47,66,68,79,],[46,48,49,67,112,117,120,]),'IGUAL':([22,26,27,28,29,30,31,32,51,52,87,88,125,126,],[47,-28,-30,-31,-32,-33,-34,-35,-29,-38,-38,-36,-37,-39,]),'PAR_DER':([26,27,28,29,30,31,32,51,52,56,57,65,69,70,71,72,74,75,76,77,82,83,84,85,87,88,112,113,114,115,116,117,119,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,149,152,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,92,-51,-50,-60,-61,-62,-63,-40,-41,-42,-43,123,124,-25,-26,-38,-36,146,147,-57,-58,-59,148,-69,-74,-80,-37,-39,-64,-65,-66,-67,-68,-71,-72,-73,-75,-76,-77,-78,-79,-81,-82,-83,-84,-85,-86,152,-70,]),'SUMA':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,93,-50,-40,-41,-42,-43,-51,93,-38,-36,-37,-39,]),'RESTA':([26,27,28,29,30,31,32,47,49,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,78,78,-29,-38,-51,94,-50,-40,-41,-42,-43,-51,94,-38,-36,-37,-39,]),'MULT':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,95,-50,-40,-41,-42,-43,-51,95,-38,-36,-37,-39,]),'DIV':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,96,-50,-40,-41,-42,-43,-51,96,-38,-36,-37,-39,]),'MOD':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,97,-50,-40,-41,-42,-43,-51,97,-38,-36,-37,-39,]),'AND':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,98,-50,-40,-41,-42,-43,-51,98,-38,-36,-37,-39,]),'OR':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,99,-50,-40,-41,-42,-43,-51,99,-38,-36,-37,-39,]),'XOR':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,100,-50,-40,-41,-42,-43,-51,100,-38,-36,-37,-39,]),'AND_BIT':([26,27,28,29,30,31,32,47,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,73,-29,-38,-51,101,-50,-40,-41,-42,-43,-51,101,-38,-36,-37,-39,]),'OR_BIT':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,102,-50,-40,-41,-42,-43,-51,102,-38,-36,-37,-39,]),'XOR_BIT':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,103,-50,-40,-41,-42,-43,-51,103,-38,-36,-37,-39,]),'SHIFT_DER':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,104,-50,-40,-41,-42,-43,-51,104,-38,-36,-37,-39,]),'SHIFT_IZQ':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,105,-50,-40,-41,-42,-43,-51,105,-38,-36,-37,-39,]),'ES_IGUAL':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,106,-50,-40,-41,-42,-43,-51,106,-38,-36,-37,-39,]),'NO_IGUAL':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,107,-50,-40,-41,-42,-43,-51,107,-38,-36,-37,-39,]),'MAYOR':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,108,-50,-40,-41,-42,-43,-51,108,-38,-36,-37,-39,]),'MENOR':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,109,-50,-40,-41,-42,-43,-51,109,-38,-36,-37,-39,]),'MAYOR_IGUAL':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,110,-50,-40,-41,-42,-43,-51,110,-38,-36,-37,-39,]),'MENOR_IGUAL':([26,27,28,29,30,31,32,51,52,57,59,65,74,75,76,77,85,86,87,88,125,126,],[-28,-30,-31,-32,-33,-34,-35,-29,-38,-51,111,-50,-40,-41,-42,-43,-51,111,-38,-36,-37,-39,]),'COR_IZQ':([26,27,28,29,30,31,32,52,87,126,],[53,-30,-31,-32,-33,-34,-35,53,53,-39,]),'COR_DER':([27,28,29,30,31,32,74,75,76,77,89,90,91,],[-30,-31,-32,-33,-34,-35,-40,-41,-42,-43,126,-52,-53,]),'ARRAY':([47,],[66,]),'READ':([47,],[68,]),'ENTERO':([47,49,53,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'CADENA':([47,49,53,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'CARACTER':([47,49,53,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'DECIMAL':([47,49,53,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'ABS':([47,49,],[79,79,]),'NOT':([47,49,],[80,80,]),'NOT_BIT':([47,49,],[81,81,]),'FLOAT':([67,],[114,]),'INT':([67,],[115,]),'CHAR':([67,],[116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'program':([0,],[2,]),'main':([0,],[3,]),'labels':([3,7,],[6,33,]),'label':([3,7,],[7,7,]),'instructions':([5,9,10,34,],[12,35,36,54,]),'instruction':([5,9,10,13,34,38,],[13,13,13,38,13,38,]),'exit':([5,9,10,13,34,38,],[14,14,14,14,14,14,]),'unset':([5,9,10,13,34,38,],[15,15,15,15,15,15,]),'print':([5,9,10,13,34,38,],[16,16,16,16,16,16,]),'if':([5,9,10,13,34,38,],[17,17,17,17,17,17,]),'set':([5,9,10,13,34,38,],[18,18,18,18,18,18,]),'goto':([5,9,10,13,34,38,124,],[19,19,19,19,19,19,150,]),'var':([5,9,10,13,34,38,46,47,48,49,73,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,147,],[22,22,22,22,22,22,56,57,82,85,118,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,151,]),'register':([5,9,10,13,34,38,46,47,48,49,53,73,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,147,],[26,26,26,26,26,26,26,26,26,26,91,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'instructionsprima':([13,38,],[39,55,]),'positions':([26,],[51,]),'position':([26,52,87,],[52,87,87,]),'assignation':([47,],[58,]),'data':([47,49,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,],[59,86,119,121,122,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,149,]),'array':([47,],[60,]),'read':([47,],[61,]),'cast':([47,],[62,]),'expression':([47,49,],[63,84,]),'pointer':([47,],[64,]),'primary':([47,49,53,78,80,81,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,],[65,65,90,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'aritmetic':([47,49,],[69,69,]),'logical':([47,49,],[70,70,]),'bitxbit':([47,49,],[71,71,]),'ralational':([47,49,],[72,72,]),'condition':([49,],[83,]),'positionsprima':([52,87,],[88,125,]),'cont':([53,],[89,]),'type':([67,],[113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> program','init',1,'p_init','descendente.py',195),
  ('init -> <empty>','init',0,'p_init_vacio','descendente.py',200),
  ('program -> main labels','program',2,'p_program','descendente.py',204),
  ('main -> MAIN DOS_PUNTOS instructions','main',3,'p_main','descendente.py',210),
  ('main -> error instructions','main',2,'p_main_error','descendente.py',215),
  ('labels -> label labels','labels',2,'p_labels','descendente.py',219),
  ('labels -> <empty>','labels',0,'p_labels_epsilon','descendente.py',225),
  ('label -> LABEL DOS_PUNTOS instructions','label',3,'p_label','descendente.py',229),
  ('label -> error instructions','label',2,'p_label_error','descendente.py',233),
  ('instructions -> instruction instructionsprima','instructions',2,'p_instructions','descendente.py',238),
  ('instructionsprima -> instruction instructionsprima','instructionsprima',2,'p_instructionsprima','descendente.py',244),
  ('instructionsprima -> <empty>','instructionsprima',0,'p_instructionsprima_epsilon','descendente.py',250),
  ('instruction -> exit PUNTO_COMA','instruction',2,'p_instruction_exit','descendente.py',255),
  ('instruction -> unset PUNTO_COMA','instruction',2,'p_instruction_unset','descendente.py',259),
  ('instruction -> print PUNTO_COMA','instruction',2,'p_instruction_print','descendente.py',264),
  ('instruction -> if PUNTO_COMA','instruction',2,'p_instruction_if','descendente.py',269),
  ('instruction -> set PUNTO_COMA','instruction',2,'p_instruction_set','descendente.py',274),
  ('instruction -> goto PUNTO_COMA','instruction',2,'p_instruction_goto','descendente.py',279),
  ('instruction -> error PUNTO_COMA','instruction',2,'p_instruction_error','descendente.py',284),
  ('exit -> EXIT','exit',1,'p_exit','descendente.py',288),
  ('goto -> GOTO LABEL','goto',2,'p_goto','descendente.py',293),
  ('unset -> UNSET PAR_IZQ var PAR_DER','unset',4,'p_unset','descendente.py',298),
  ('print -> PRINT PAR_IZQ var PAR_DER','print',4,'p_print','descendente.py',303),
  ('if -> IF PAR_IZQ condition PAR_DER goto','if',5,'p_if','descendente.py',308),
  ('condition -> expression','condition',1,'p_condition_expression','descendente.py',313),
  ('condition -> var','condition',1,'p_condition_var','descendente.py',318),
  ('set -> var IGUAL assignation','set',3,'p_set','descendente.py',323),
  ('var -> register','var',1,'p_var','descendente.py',328),
  ('var -> register positions','var',2,'p_var_array','descendente.py',333),
  ('register -> TEMPORAL','register',1,'p_register_temporal','descendente.py',338),
  ('register -> PARAMETRO','register',1,'p_register_parametro','descendente.py',343),
  ('register -> DEVUELTO','register',1,'p_register_devuelto','descendente.py',348),
  ('register -> RETORNO','register',1,'p_register_retorno','descendente.py',353),
  ('register -> PILA','register',1,'p_register_pila','descendente.py',358),
  ('register -> PUNTERO','register',1,'p_register_puntero','descendente.py',363),
  ('positions -> position positionsprima','positions',2,'p_positions','descendente.py',368),
  ('positionsprima -> position positionsprima','positionsprima',2,'p_positionsprima','descendente.py',374),
  ('positionsprima -> <empty>','positionsprima',0,'p_positionsprima_epsilon','descendente.py',380),
  ('position -> COR_IZQ cont COR_DER','position',3,'p_position','descendente.py',385),
  ('primary -> ENTERO','primary',1,'p_primary_entero','descendente.py',390),
  ('primary -> CADENA','primary',1,'p_primary_cadena','descendente.py',395),
  ('primary -> CARACTER','primary',1,'p_primary_caracter','descendente.py',400),
  ('primary -> DECIMAL','primary',1,'p_primary_decimal','descendente.py',405),
  ('assignation -> data','assignation',1,'p_assignation_data','descendente.py',410),
  ('assignation -> array','assignation',1,'p_assignation_array','descendente.py',415),
  ('assignation -> read','assignation',1,'p_assignation_read','descendente.py',420),
  ('assignation -> cast','assignation',1,'p_assignation_cast','descendente.py',425),
  ('assignation -> expression','assignation',1,'p_assignation_expression','descendente.py',430),
  ('assignation -> pointer','assignation',1,'p_assignation_pointer','descendente.py',435),
  ('data -> primary','data',1,'p_data_primary','descendente.py',440),
  ('data -> var','data',1,'p_data_var','descendente.py',445),
  ('cont -> primary','cont',1,'p_cont_primary','descendente.py',450),
  ('cont -> register','cont',1,'p_cont_register','descendente.py',455),
  ('array -> ARRAY PAR_IZQ PAR_DER','array',3,'p_array','descendente.py',460),
  ('read -> READ PAR_IZQ PAR_DER','read',3,'p_read','descendente.py',465),
  ('cast -> PAR_IZQ type PAR_DER var','cast',4,'p_cast','descendente.py',470),
  ('type -> FLOAT','type',1,'p_type','descendente.py',475),
  ('type -> INT','type',1,'p_type','descendente.py',476),
  ('type -> CHAR','type',1,'p_type','descendente.py',477),
  ('expression -> aritmetic','expression',1,'p_expression_aritmetic','descendente.py',487),
  ('expression -> logical','expression',1,'p_expression_logical','descendente.py',492),
  ('expression -> bitxbit','expression',1,'p_expression_bitxbit','descendente.py',497),
  ('expression -> ralational','expression',1,'p_expression_ralational','descendente.py',502),
  ('aritmetic -> data SUMA data','aritmetic',3,'p_aritmetic','descendente.py',507),
  ('aritmetic -> data RESTA data','aritmetic',3,'p_aritmetic','descendente.py',508),
  ('aritmetic -> data MULT data','aritmetic',3,'p_aritmetic','descendente.py',509),
  ('aritmetic -> data DIV data','aritmetic',3,'p_aritmetic','descendente.py',510),
  ('aritmetic -> data MOD data','aritmetic',3,'p_aritmetic','descendente.py',511),
  ('aritmetic -> RESTA data','aritmetic',2,'p_aritmetic','descendente.py',512),
  ('aritmetic -> ABS PAR_IZQ data PAR_DER','aritmetic',4,'p_aritmetic','descendente.py',513),
  ('logical -> data AND data','logical',3,'p_logical','descendente.py',531),
  ('logical -> data OR data','logical',3,'p_logical','descendente.py',532),
  ('logical -> data XOR data','logical',3,'p_logical','descendente.py',533),
  ('logical -> NOT data','logical',2,'p_logical','descendente.py',534),
  ('bitxbit -> data AND_BIT data','bitxbit',3,'p_bitxbit','descendente.py',547),
  ('bitxbit -> data OR_BIT data','bitxbit',3,'p_bitxbit','descendente.py',548),
  ('bitxbit -> data XOR_BIT data','bitxbit',3,'p_bitxbit','descendente.py',549),
  ('bitxbit -> data SHIFT_DER data','bitxbit',3,'p_bitxbit','descendente.py',550),
  ('bitxbit -> data SHIFT_IZQ data','bitxbit',3,'p_bitxbit','descendente.py',551),
  ('bitxbit -> NOT_BIT data','bitxbit',2,'p_bitxbit','descendente.py',552),
  ('ralational -> data ES_IGUAL data','ralational',3,'p_relational','descendente.py',568),
  ('ralational -> data NO_IGUAL data','ralational',3,'p_relational','descendente.py',569),
  ('ralational -> data MAYOR data','ralational',3,'p_relational','descendente.py',570),
  ('ralational -> data MENOR data','ralational',3,'p_relational','descendente.py',571),
  ('ralational -> data MAYOR_IGUAL data','ralational',3,'p_relational','descendente.py',572),
  ('ralational -> data MENOR_IGUAL data','ralational',3,'p_relational','descendente.py',573),
  ('pointer -> AND_BIT var','pointer',2,'p_pointer','descendente.py',589),
]
